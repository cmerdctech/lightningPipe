'use strict';
var qtools = require('qtools'),
	qtools = new qtools(module),
	events = require('events'),
	util = require('util');

//START OF moduleFunction() ============================================================

var moduleFunction = function(args) {
	events.EventEmitter.call(this);
	this.forceEvent = forceEvent;
	this.args = args;

	qtools.validateProperties({
		subject: args,
		targetScope: this, //will add listed items to targetScope
		propList: [
			{
				name: 'queryInfo',
				optional: false
			},
			{
				name: 'clientProfile',
				optional: false
			}
		]
	});

	var self = this,
		forceEvent = function(eventName, outData) {
			this.emit(eventName, {
				eventName: eventName,
				data: outData
			});
		};


	//LOCAL FUNCTIONS ====================================

	var executeGetData = function(accessObject) {
				accessObject.getRawData(function(result) {
				self.emit('getDataComplete', result);
			});
	}

	//METHODS AND PROPERTIES ====================================

	qtools.addMetaData('queryInfo', this.queryInfo);
	

	this.getData = function() {
		switch (self.clientProfile.dataSource.type) {
			case 'file':
				var fileAccessor = require("uffFileAccessor");
				break;
			case 'mssql':
				qtools.die("add self.clientProfile.dataSource.loginParameters to clientProfile");
				//var fileAccessor = require("mssqlFileAccessor");
				break;
		}


		fileAccessor = new fileAccessor({
			queryInfo: self.queryInfo,
			clientProfile: self.clientProfile,
			validUriSegmentNames:['districts', 'schools', 'segments']
		});

		self.on('getDataComplete', function(accessResult) {
			if (accessResult.status>0) {
				self.emit('gotData', {
					result: accessResult.data,
					meta: qtools.mergeMetaData(accessResult.meta)
				});
			} else {
				self.emit('badData', {
					result: accessResult.data,
					meta: qtools.mergeMetaData(accessResult.meta)
				});
			}
		});

		executeGetData(fileAccessor);
	};

	//INITIALIZATION ====================================



	return this;
};

//END OF moduleFunction() ============================================================

util.inherits(moduleFunction, events.EventEmitter);
module.exports = moduleFunction;




