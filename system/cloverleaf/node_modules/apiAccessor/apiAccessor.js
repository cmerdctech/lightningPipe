'use strict';
var qtools = require('qtools'),
	qtools = new qtools(module),
	events = require('events'),
	util = require('util');

//START OF moduleFunction() ============================================================

var moduleFunction = function(args) {
	events.EventEmitter.call(this);
	this.forceEvent = forceEvent;
	this.args = args;
	this.metaData = {};
	this.addMeta = function(name, data) {
		this.metaData[name] = data;
	}

	qtools.validateProperties({
		subject: args,
		targetScope: this, //will add listed items to targetScope
		propList: [
			{
				name: 'url',
				optional: false
			}
		]
	});

	var self = this,
		forceEvent = function(eventName, outData) {
			this.emit(eventName, {
				eventName: eventName,
				data: outData
			});
		};


	//LOCAL FUNCTIONS ====================================

	var expand = function(result, body) {
		var type = result.headers['content-type'].match(/application\/json/) ? 'json' : '';
		switch (type) {
			case 'json':
				return JSON.parse(body);
				break;
			default:
				return body;
				break;
		}
	}

	//METHODS AND PROPERTIES ====================================



	//INITIALIZATION ====================================

	this.request = require('request');



	this.giveMeTheGoods = function(callback) {
		self.request.get(this.url, function(err, result, body) {
			if (err) {
				callback({
					errno: -1,
					message: 'bad get for url: ' + self.url,
					evidence: err
				});
			} else {
				self.result = result;
				self.body = expand(result, body);
				callback('', self.body);
			}
		});
	}


	return this;
};

//END OF moduleFunction() ============================================================

util.inherits(moduleFunction, events.EventEmitter);
module.exports = moduleFunction;

