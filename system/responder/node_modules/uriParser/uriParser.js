'use strict';
var qtools = require('qtools'),
	qtools = new qtools(module),
	events = require('events'),
	util = require('util');

//START OF moduleFunction() ============================================================

var moduleFunction = function(args) {
	events.EventEmitter.call(this);
	this.forceEvent = forceEvent;
	this.args = args;

	qtools.validateProperties({
		subject: args,
		targetScope: this, //will add listed items to targetScope
		propList: [
			{
				name: 'apiVersion',
				optional: false
			},
			{
				name: 'apiName',
				optional: false
			}
		]
	});

	var self = this,
		forceEvent = function(eventName, outData) {
			this.emit(eventName, {
				eventName: eventName,
				data: outData
			});
		};


	//LOCAL FUNCTIONS ====================================

var extractFields=function(inString){
	return inString.split('/');
}


	//METHODS AND PROPERTIES ====================================
	
	
	this.parsers={};
	this.parsers.uff={};
	this.parsers.uff['1.0']=function(inString){
	
	var outList=[];
	var list=extractFields(inString);
	for (var i=0, len=list.length; i<len; i=i+2){
		var operand=list[i+1];
		
		outList.push({name:list[i], value:operand?operand:'list'});
		
		if (!operand){
			break;
			}

	}
	return outList;
	
	}

this.getVersion=function(){ return self.apiVersion; };
this.getName=function(){ return self.apiName; };

this.parse=self.parsers[self.apiName][self.apiVersion];

	//INITIALIZATION ====================================

	

	return this;
};

//END OF moduleFunction() ============================================================

util.inherits(moduleFunction, events.EventEmitter);
module.exports = moduleFunction;